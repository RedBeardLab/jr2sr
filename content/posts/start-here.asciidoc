---
title: "Start Here"
date: 2020-04-04T23:19:06+02:00
draft: false
---

= Start Here

Junior 2 Senior is technical course where I try to unload all my knowledge for younger computer engineers that want to accellerate their carreer path.

The goal is to provide all the necessary notion and way of reasoning around problems for people to be hired in high-tech companies.

The serie is based only on fundamental concepts. We will focus only on those concepts that were important 20 years ago, are important now, and will be important for at least the next 20 years.

We will cover very broad topics without going too deeply into any, there are already a lot of resources, references, and article to dive deep into all the topic we will cover, the value of this publication will be in uncover in an organic way all the small things that senior computer engineers should know. It is left to the reader decide which topic explore further and when. 

Some people will need to understand better the internals of compilers, while for other it would be more beneficial to study how the sorting in a database work. In this pubblication we will explore both.

Moreover we will suggest some exercise to actually learn by doing and making sure that you really got the main ideas down to the important details.

== What it is about

The course is about getting you up to speed with all those arguments that are fundamental for computer egineers but to which younger engineers might have not been exposed yet.

It is about making sure you have all the notion necessary to go above expectations.

It is about overcoming imposter syndrome having studied and understood those fundamental topics on which everything else is based.

All the topic covered are much deeper than what could be covered, but it will be up to the reader keep digging for what it is more interesting.

== A different course

Technical books are usually about a specific topic, say "Graphical programming with GPU".
Those kind of books and courses go extremelly deeply about the specific topic teaching all the important and not so important bits.
Those resources are fundamental if you are specializing in a particular field.

This course is different, it is about exposing you to most of the fundamental concepts that any senior engineer should know.

== Structure

The course is composed of two part.

. A book
. A community

The book is digital and you will have access to all the version and the errata. It is in presale here.

The community is about sharing solution with the exercises, clarify part of the books that are not clear, ask further questions, suggest new topics, and helping each other. 
It will also be possible to ask support during technical interview preparation.
The community is still not open.

== Outline

The outline of the book is in progress, new topic will be added and stuff will be moved.

But this is a rough idea.

. The web basics: *Learn the fundamental blocks of the modern web*
.. link:../whats-a-web-request[What is a web request]
.. DNS
.. Sockets
.. UDP
.. TCP
.. Media Streaming

. Understaing low level memory: *How memory works and what are the implication*
.. Memory
.. Strings
.. Pointers
.. Data Structures
.. On disk data structure
.. Disk Storage vs Memory
.. Caches

. How code runs: *How do we go from source code to make computer do stuff*
.. Compilation
.. Interpretation
.. Stack vs Heap
.. Memory layout
.. Shared libraries
.. Building Software

. Multiple core: *CPU are not getting any faster, but we are getting more of them, how to use them*
.. Threads
.. Process
.. Communication
.. Atomic variables

. Linux: *Working with the basic linux API*
.. glibc
.. IO
.. Filesystems
.. Software Installation

