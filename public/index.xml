<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Junior 2 Senior</title>
    <link>https://jr2sr.netlify.com/</link>
    <description>Recent content on Junior 2 Senior</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 Apr 2020 23:19:06 +0200</lastBuildDate>
    
        <atom:link href="https://jr2sr.netlify.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What is a Web Request</title>
      <link>https://jr2sr.netlify.com/posts/whats-a-web-request/</link>
      <pubDate>Fri, 10 Apr 2020 12:53:57 +0200</pubDate>
      
      <guid>https://jr2sr.netlify.com/posts/whats-a-web-request/</guid>
      <description>&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://jr2sr.netlify.com/whats-a-web-request.jpg&#34; alt=&#34;Networks Cables - Photo by Jordan Harrison on Unsplash&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The web and internet as a large are fundamental for today world, but how does it works under the hood?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this article we will talk about HTTP requests that are the fundamentals blocks that make the modern web possible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We wil explores how tools like &lt;a href=&#34;https://requests.readthedocs.io/en/master/&#34;&gt;Python &lt;code&gt;requests&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://ruby-doc.org/stdlib-2.7.0/libdoc/net/http/rdoc/Net/HTTP.html&#34;&gt;Ruby &lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; or again the &lt;a href=&#34;https://golang.org/pkg/net/http/&#34;&gt;Go package &lt;code&gt;net/http&lt;/code&gt;&lt;/a&gt; or any other library that you may use in any other language works.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_aha_moment&#34;&gt;The Aha moment&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Reasoning about the topic become extremely simple as soon as we figure out what is an HTTP request, and the reality is extremely simple.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An HTTP request is nothing more than a stream of bytes, almost always ASCII bytes that it is possible to read and interpretate. To put it even more simply, it is just a string formatted following some rule.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The one below is already a complete HTTP requests and this is the most important concept. An HTTP request is nothing more that strings of text similar to this one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;GET / HTTP/2
Host: www.google.com
User-Agent: curl/7.58.0
Accept: */*&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An HTTP response is not that different:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;HTTP/2 200
date: Fri, 10 Apr 2020 11:25:36 GMT
expires: -1
cache-control: private, max-age=0
content-type: text/html; charset=ISO-8859-1
p3p: CP=&#34;This is not a P3P policy! See g.co/p3phelp for more info.&#34;
server: gws
x-xss-protection: 0
x-frame-options: SAMEORIGIN
set-cookie: 1P_JAR=2020-04-10-11; expires=Sun, 10-May-2020 11:25:36 GMT; path=/; domain=.google.com; Secure
set-cookie: NID=202=lXbpl7jzwsRDvcSyw84CtGB7NO3J2HziT0SjF24N4joVsoUzXNRdc03yTeckZu2zQXc8TJty73IYg9ktX3yrtSb59lC1-jxyTprH_wGly4D2RiFC4Ww1T2Om69YYjxDtkgEDmQbqoYYyzahBQowvSM-q5JpF6hoC-gzLRTnnn38; expires=Sat, 10-Oct-2020 11:25:36 GMT; path=/; domain=.google.com; HttpOnly
alt-svc: quic=&#34;:443&#34;; ma=2592000; v=&#34;46,43&#34;,h3-Q050=&#34;:443&#34;; ma=2592000,h3-Q049=&#34;:443&#34;; ma=2592000,h3-Q048=&#34;:443&#34;; ma=2592000,h3-Q046=&#34;:443&#34;; ma=2592000,h3-Q043=&#34;:443&#34;; ma=2592000,h3-T050=&#34;:443&#34;; ma=2592000
accept-ranges: none
vary: Accept-Encoding

&amp;lt;!doctype html&amp;gt;&amp;lt;html&amp;gt; ...THE_HTML_OF_THE_GOOGLE_HOMEPAGE... &amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All those libraries and framework are just a way to create, interpretate and send over the networks strings that looks like this.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_http_rules_and_protocol&#34;&gt;The HTTP rules and protocol&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The rules to create a correct HTTP request are encoded in an &lt;a href=&#34;https://tools.ietf.org/html/rfc7230&#34;&gt;RFC 7230&lt;/a&gt; it can be interesting to explore the document and understand at least some of the details, but for most developer will be an overkill.
However if your work orbitate a lot around the web infrastracture it can be necessary.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For instance &lt;a href=&#34;https://tools.ietf.org/html/rfc7230#section-3&#34;&gt;Section 3 of RFC 7230&lt;/a&gt; describe formally what is a &lt;code&gt;HTTP message&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;HTTP-message = start-line
               *( header-field CRLF )
               CRLF
               [ message-body ]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This definition means that an &lt;code&gt;HTTP-message&lt;/code&gt; is nothing else than a &lt;code&gt;start-line&lt;/code&gt;, followed by 0 or more &lt;code&gt;header-field&lt;/code&gt; each followed by a CRLF (a new line &lt;code&gt;\r\n&lt;/code&gt;), another newline and an optional &lt;code&gt;message-body&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Keep reading the RFC we will discover what is &lt;a href=&#34;https://tools.ietf.org/html/rfc7230#section-3.1.1&#34;&gt;&lt;code&gt;start-line&lt;/code&gt; on section 3.1&lt;/a&gt; and so on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It turns out that the &lt;code&gt;start-line&lt;/code&gt; of a request specify the method of the request, either &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;CONNECT&lt;/code&gt;, &lt;code&gt;OPTIONS&lt;/code&gt; or &lt;code&gt;TRACE&lt;/code&gt; all documented in &lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-4&#34;&gt;RFC 7231 Section 4&lt;/a&gt;.
Most developer just need to be aware of all the possible methods, but they won&amp;#8217;t use all of them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then it specify what is the target of the request, in our case the root directory &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And finally it specify what protocol to use in the communication, in this case we use &lt;code&gt;HTTP/2&lt;/code&gt;, another common one is &lt;code&gt;HTTP/1.1&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_keeping_state_authentication_and_cookie&#34;&gt;Keeping state, authentication and cookie&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The HTTP protocol is mostly stateless, there is nothing that forbid a client to request somebody private records on a social network protocol, after all an HTTP request is just a string formatted following some rules.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However the server need and actually does forbid those requests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To overcome the limitation imposed by being a stateless protocol, HTTP relies on the concept of Cookies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A HTTP response, generated by an HTTP server, can includes the &lt;code&gt;Set-Cookie&lt;/code&gt; header (the name is case insensitive, the request above to google.com returned &lt;code&gt;set-cookie&lt;/code&gt;).
The &lt;code&gt;Set-Cookie&lt;/code&gt; header instruct the &lt;code&gt;user-agent&lt;/code&gt; (the client, with some level of approximation) to store the value of the cookie and to send it to the server to any subsequent request to the sever using the &lt;code&gt;Cookie&lt;/code&gt; header.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Another &lt;a href=&#34;https://tools.ietf.org/html/rfc6265&#34;&gt;RFC (6265)&lt;/a&gt; cover this topic extensively.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For most developer is sufficient to know that the &lt;code&gt;Set-Cookie&lt;/code&gt; header can provides some options that tweak what the client is suppose to do with the cookie.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For instance the &lt;code&gt;Path&lt;/code&gt; attribute indicate that the cookie should be returned only for requests against a specific URL path.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;code&gt;Secure&lt;/code&gt; indicate that the cookie should not be sent on insecure connections.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Finally the &lt;code&gt;HttpOnly&lt;/code&gt; indicate that the cookie should not be accessible outside the HTTP protocol, for instance it should not be read using the JS API on the browser.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_closing_thoughts&#34;&gt;Closing thoughts&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;While the protocol itself is rather simple, after all it is just about concatenating strings and keep tracks of cookies, the necessities of modern software forced us to build complex systems to extract as much performance as possible while keeping an ergonomic interface.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most likely developers would like to make more request in parallel while maybe sharing some cookie but not all.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All these real-world necessities and use case makes the software explode in complexity, but also in usefullness.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However &lt;code&gt;HTTP&lt;/code&gt; remains a simple protocol and the CPython codebase &lt;a href=&#34;https://github.com/python/cpython/blob/3.8/Lib/http/client.py#L1096-L1098&#34;&gt;offers a glimpse of this simplicty.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;request = &#39;%s %s %s&#39; % (method, url, self._http_vsn_str)
self._output(self._encode_request(request))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is creating the &lt;code&gt;start-line&lt;/code&gt; of an HTTP message, just like we did at the very beginning of this post with &lt;code&gt;GET / HTTP/2&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_exercises&#34;&gt;Exercises&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create a function to create HTTP requests.
As input you can expect the methods (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc&amp;#8230;&amp;#8203;), the host and the URL of the resource.
You can expand the little function to support also headers?
And how would you manage cookies?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;On the next section we will discover DNS, sockets and TCP. So it will be possible to actually send a request and read back the response.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_bonus_trivial&#34;&gt;Bonus Trivial&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;From the standard of &lt;code&gt;HTTP1.1&lt;/code&gt; the headers are stricly optionals, indeed they are defined like this &lt;code&gt;*( header-field CRLF)&lt;/code&gt; where the star (&lt;code&gt;*&lt;/code&gt;) means &lt;strong&gt;zero&lt;/strong&gt; or more repetition.
However the same standard dictate that the &lt;code&gt;Host&lt;/code&gt; header &lt;a href=&#34;https://tools.ietf.org/html/rfc7230#section-5.4&#34;&gt;&lt;strong&gt;must&lt;/strong&gt; be present&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This clear inconsistency was introduced to keep backward compatibility, so that every &lt;code&gt;HTTP1.1&lt;/code&gt; request is also a &lt;code&gt;HTTP1.0&lt;/code&gt; request.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is a clear examples of how the world evolves from mistakes and error and also something as widespread and used as &#34;the internet&#34; was designed with some initial mistakes. After all we are human and the success of the &lt;code&gt;HTTP&lt;/code&gt; was not sure.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Junior 2 Senior</title>
      <link>https://jr2sr.netlify.com/posts/start_here/</link>
      <pubDate>Sat, 04 Apr 2020 23:19:06 +0200</pubDate>
      
      <guid>https://jr2sr.netlify.com/posts/start_here/</guid>
      <description>&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Junior 2 Senior is a technical course where I unload all my knowledge for younger computer engineers that want to speed up their career path.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The goal is to provide all the necessary notions and mental models to work around problems for people to be hired in high-tech companies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The course is based only on fundamental concepts. We will focus only on those concepts that were important 20 years ago, are important now, and will be important for at least the next 20 years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We will cover very broad topics without going too deep into any, there are already a lot of resources, references and articles to dive deep into all the topics we will cover. The purpose of this publication is to uncover organically all the small things that senior computer engineers should know. It is left to the reader to decide which topic explores further and when.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some people will need to understand better the internals of compilers, while for others it would be more beneficial to study how the sorting inside a database works. In this course, we will explore both.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We will suggest some exercises to help you learn by doing. Making sure that you understand the main ideas down to the important details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_it_is_about&#34;&gt;What it is about&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The course is about getting you up to speed with all those topics that are fundamental for computer engineers but to which younger engineers might have not been exposed yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is about making sure you have all the notion to go above expectations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is about overcoming imposter syndrome having studied and understood those fundamental topics on which everything else is based.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All the topics covered are much deeper than what could be cover, but it will be up to the reader to keep digging for what it is more interesting.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_different_course&#34;&gt;A different course&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Technical books are usually about a specific topic, say &#34;Graphical programming with GPU&#34;.
Those kinds of books and courses go extremely deeply about the specific topic, teaching all the important and not so important bits.
Those resources are fundamental if you are specializing in a particular field.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This course is different, it is about exposing you to the fundamental concepts that any senior engineer should know.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_structure&#34;&gt;Structure&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The course is composed of two-part.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;A book&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A community&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The book is digital and you will have access to all the versions and the errata. &lt;a href=&#34;https://gumroad.com/l/junior2senior&#34;&gt;It is in presale here.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The community is about sharing solution with the exercises, clarify part of the books that are not clear, ask further questions, suggest new topics, and helping each other.
It will also be possible to ask support during technical interview preparation.
The community is still not open.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_outline&#34;&gt;Outline&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The outline of the book is in progress, new topics will be added and stuff will be moved.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But this is a rough idea.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;The web basics: &lt;strong&gt;Learn the fundamental blocks of the modern web&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;../whats-a-web-request&#34;&gt;What is a web request&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sockets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UDP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TCP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Media Streaming&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understanding low-level memory: &lt;strong&gt;How memory works and what are the implication&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Strings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pointers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data Structures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On-disk data structure&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disk Storage vs Memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Caches&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How code runs: &lt;strong&gt;How do we go from source code to make computers do stuff&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Compilation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interpretation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stack vs Heap&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Memory layout&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shared libraries&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Building Software&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple cores: &lt;strong&gt;CPU are not getting any faster, but we are getting more of them, how to use them&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;Threads&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Process&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Communication&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Atomic variables&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux: &lt;strong&gt;Working with the basic Linux API&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;glibc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IO&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Filesystems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software Installation&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>